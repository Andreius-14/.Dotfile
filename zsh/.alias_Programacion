#=============================
#  GIT
#=============================

alias gcl='git clone --depth 1'
alias gi='git init'
alias ga='git add'
alias gc='git commit -m'
alias gp='git push origin master'


alias log1="git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all"
alias log2="git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all"

alias gitlog="git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)[%ar]%C(reset) %C(cyan)[%ad]%C(reset)%C(bold)%d%C(reset)  %n''          %C(dim white)%an - %ae%C(reset)%n''          %C(dim white)Mensaje: \"%s\"%C(reset)' --all"
alias glmini="git log --graph --abbrev-commit --decorate --format=format:'%C(38)%h%C(reset) - %C(255)Autor: %an%C(reset)%C(39) [%ar]%C(reset) %C(bold)%d%C(reset)%n          %C(37)Mensaje: \"%s\"%C(reset)' --all"

#=============================
#  GIT FUNCTION
#=============================

function g_GeneraCommit(){
    git add . && git commit -m "$1"
}
function github() {
    g_GeneraCommit "$1" && git push
}

function g_inicio (){
  git init -b main
}

function init_Submodulo(){
    git submodule init
    git submodule update

    # Si podemos actualizar al hacer pull al repo Padre Ejecutar
    # git pull --recurse-submodules
}

function g_EnlaceRemoto(){

  [[ -z "$1" ]] && { echo "No se ha ingresado URL"; return 1; }

  [[ ! -d .git ]] && {
      echo -e "\e[32m[Inicializando Git]\e[0m"
      g_inicio || echo "Fallo Init" ;return 1
  }

  #Enlace Remoto
  echo -e "\e[32m[Añadiendo Enlace Remoto]\e[0m"
  git remote add origin "$1" || git remote set-url origin "$1" || return 1

  # Verificar Cambios
  if git fetch; then
    echo -e "\e[32m[Pull a Repositorio Remoto]\e[0m"
    if git pull origin main; then
      g_GeneraCommit "Enlace Remoto a Github"
    else
      read -p "❓ ¿Desea ejecutar un Rebase? (yes/no): " valor
      if [[ "$valor" == "yes" ]]; then
        git pull --rebase origin main && g_GeneraCommit "Enlace Remoto - Situación de REBASE" || { echo "Falló el rebase."; return 1; }
      else
        return 1  # Si no quiere rebase, salir con error
      fi
    fi
  fi

  # Remoto 
  echo -e "\e[32m[Enviando Cambios a Repositorio Remoto]\e[0m"
  git push origin main || echo "Enpuje Fallido"
}


#=============================
#  PHP
#=============================

alias phpserver="php -S localhost:8000"

#=============================
#  PY
#=============================

alias pyEntorno='virtualenv venv && . venv/bin/activate'
alias pyEnter='. venv/bin/activate'
alias pyExit='deactivate'

alias pyList='pip freeze > requeriments.txt'
alias pyRestaurar='pip install -r requirements.txt'
alias pyNodemon='nodemon --exec python ' #NameFile 


#=============================
#  JS
#=============================

alias jsEntornoWeb='pnpm create vite . --template vanilla'

alias jsEntornoNode='pnpm init && pnpm add standard -D  && jsEditJson'

function jsEditJson() {
    local config='{"type": "module", "eslintConfig": {"extends": "standard"}}'
    jq ". + $config" package.json > temp.json && mv temp.json package.json
}
#=============================
#  C#
#=============================

alias CsEntorno='dotnet new sln && dotnet new console -o Main && dotnet sln add */'
