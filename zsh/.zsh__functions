
#════════════════════════════════════════════════════════════════════════════════════════════╗ 
# Linux -- Little
#════════════════════════════════════════════════════════════════════════════════════════════╝


Error() { 
  # Colores: [31: Rojo] [32: Verde] [33: Amarillo] [34: Azul] [35: Magenta] [36: Cian] [37: Blanco]
  local msm="$1"
  local num_color="${2:-31}"  # Si no se pasa un color, usa rojo por defecto (31)

  echo -e "\e[${num_color}mError: $msm\e[0m" >&2
  return 1
}

  
#════════════════════════════════════════════════════════════════════════════════════════════╗ 
# Linux -- Hooby's 
#════════════════════════════════════════════════════════════════════════════════════════════╝

spotdl_playlist() {

  #Procura tener Instalado jq
  if [[ -z "$1" ]]; then
    echo "Ingrese la URL de la Playlist"
    return 1
  fi

  local url=$1
  local file="predeterminado.spotdl"
  local ruta="{list-name}/{artist} - {title}.{output-ext}"

  # Parte 1 - Descargar
  spotdl sync "$url" --save-file "$file" --output "$ruta"

  # Parte 2 - name
  local name=$(ls -dt * | head -n 1)

  # Parte 3 - sync File
  mv "$file" "$name/Playlist_$name.spotdl"  # Renombro y Muevo

}

spotdl_pull(){
  find . -name "*.spotdl" -print0 | while IFS= read -r -d $'\0' file; do
    spotdl sync "$file"
  done 
}
#════════════════════════════════════════════════════════════════════════════════════════════╗ 
# Linux -- Automatizacion 
#════════════════════════════════════════════════════════════════════════════════════════════╝


remove_path() {
  if [[ -z "$1" ]]; then  
    echo "Debes proporcionar una ruta para eliminar del PATH."
    return 1
  fi

  # Usar un patrón que elimine la ruta de forma segura
  export PATH=$(echo "$PATH" | sed -e "s|^$1:||" -e "s|:$1:|:|" -e "s|:$1||" -e "s|^$1||")
}

#=============================
#  LINUX -- Dotfiles
#=============================




#=============================
#  LINUX -- Scripts
#=============================

habilitar-scripts() {
  local directorio="$HOME/.Andreius-Scripts"
  local permisos="755" # Ajusta los permisos según tus necesidades

  if [[ -d "$directorio" ]]; then
    echo "Buscando archivos .sh en $directorio..."
    for archivo in "$directorio"/*.sh; do
      if [[ -f "$archivo" ]]; then
        chmod "$permisos" "$archivo"
        echo "Se ha otorgado permiso de ejecución a: $archivo"
      fi
    done
  else
    echo "El directorio $directorio no existe."
  fi
}

# habiliar-AppImages(){
#   local directorio=""
#
# }

#=============================
#  LINUX -- Matematica
#=============================

tabla_multiplicar() {
  # Comprobar si se pasó un número como argumento
  if [ -z "$1" ]; then
    echo "Por favor, ingresa un número para mostrar su tabla de multiplicar."
    return 1
  fi

  # Input
  local numero=$1

  # Imprimir la tabla de multiplicar con formato simple y alineado
  echo -e "==============\n  Tabla: $numero\n==============" 
  for i in {1..12}; do
    # Asegurarse de que los números de un solo dígito tengan un 0 al principio
    printf "%2d x %2d = %02d\n" "$numero" "$i" "$((numero * i))"
  done
}



#════════════════════════════════════════════════════════════════════════════════════════════╗ 
#                                     INFORMACION
#════════════════════════════════════════════════════════════════════════════════════════════╝

info_ssh(){
  echo -e "\n══════════════════════════════════════════════"
  echo -e "nota: Tener Instalado [openssh, nmap]"
  echo -e "nota: El sistema debe tener Password"
  echo -e "nota: El sistema debe tener Corriendo sshd"
  echo -e "══════════════════════════════════════════════\n"

  local inf_name=$(whoami)
  local inf_ip=$(ip a | grep "192.168" || echo "Error de Red")

  echo "Name -> $inf_name "
  echo "IP   -> $inf_ip   " 
  echo -e "\n\nLos Puertos Habiertos ⮯"
  ss -tuln
}
